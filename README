Trabalho Prático: Autenticação com JWT em Node.js e Express com Sequelize e SQLite
Introdução
Neste trabalho prático, você irá aprender a implementar um sistema de autenticação utilizando JSON Web Tokens (JWT) em uma aplicação Node.js com Express. Além disso, você utilizará o Sequelize como ORM (Object-Relational Mapping) para lidar com o banco de dados SQLite.

Objetivos
Compreender os conceitos fundamentais de autenticação e autorização em aplicações web.
Implementar um sistema de autenticação utilizando JWT em uma aplicação Node.js.
Utilizar o Sequelize para criar e manipular modelos de dados e interagir com o banco de dados SQLite.
Pré-requisitos
Conhecimento básico de Node.js e Express.
Familiaridade com conceitos de banco de dados relacionais.
Ter o Node.js e o npm (Node Package Manager) instalados em sua máquina.
Tarefas
1. Configuração do Projeto
Crie um novo projeto Node.js.
Instale as dependências necessárias, incluindo Express, Sequelize e jsonwebtoken.
Configure o Sequelize para trabalhar com o banco de dados SQLite.
2. Modelagem de Dados
Crie os modelos de dados necessários para o sistema de autenticação, incluindo usuário (com campos como nome, email e senha).
Utilize o Sequelize para definir as associações entre os modelos, como relacionamentos entre usuário e outras entidades.
3. Implementação da Autenticação
Crie rotas para registro (cadastro de novos usuários) e login.
Implemente a lógica de autenticação utilizando JWT, gerando tokens para usuários autenticados.
Utilize middlewares do Express para proteger rotas que exigem autenticação, verificando a presença e validade dos tokens JWT.
4. Testes e Documentação
Teste as rotas de autenticação para garantir seu funcionamento correto.
Documente o processo de configuração e implementação, incluindo instruções claras sobre como executar o projeto e utilizar as funcionalidades implementadas.
